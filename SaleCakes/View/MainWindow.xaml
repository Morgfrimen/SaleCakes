<Window x:Class="SaleCakes.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:SaleCakes.ViewModel"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:showMeTheXaml="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
        xmlns:components="clr-namespace:SaleCakes.View.Components"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}"
        MinWidth="550"
        d:Width="550"
        MaxWidth="1500"
        MinHeight="400">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="MenuColumn" Width="10*" />
            <ColumnDefinition Width="90*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="RowMenu" Height="10*" />
            <RowDefinition Height="90*" />
        </Grid.RowDefinitions>

        <showMeTheXaml:XamlDisplay
            Grid.Row="0"
            Grid.RowSpan="2"
            Visibility="{Binding VisibilityMenu}"
            Grid.Column="0"
            Grid.ColumnSpan="2"

            UniqueKey="color_zones_inverted">
            <materialDesign:ColorZone
                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type showMeTheXaml:XamlDisplay}},Path=ActualWidth}"
                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type showMeTheXaml:XamlDisplay}}, Path=ActualHeight}"
                Mode="Light">

                <materialDesign:DrawerHost
                    OpenMode="Modal"
                    x:Name="DrawerHost"
                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type showMeTheXaml:XamlDisplay}},Path=ActualWidth}"
                    Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type showMeTheXaml:XamlDisplay}}, Path=ActualHeight}"
                    BorderBrush="{DynamicResource MaterialDesignDivider}"
                    BottomDrawerCornerRadius="20 20 0 0"
                    BottomDrawerBackground="{DynamicResource SecondaryHueLightBrush}"
                    IsLeftDrawerOpen="False">

                    <materialDesign:DrawerHost.Style>
                        <Style TargetType="materialDesign:DrawerHost"
                               BasedOn="{StaticResource {x:Type materialDesign:DrawerHost}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=BackgroundToggle}"
                                             Value="True">
                                    <Setter Property="OverlayBackground"
                                            Value="{DynamicResource PrimaryHueMidBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </materialDesign:DrawerHost.Style>

                    <materialDesign:DrawerHost.LeftDrawerContent>
                        <StackPanel Width="200">
                            <TextBlock
                                Margin="4"
                                HorizontalAlignment="Center"
                                Text="LEFT FIELD" />

                            <Button
                                Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                                CommandParameter="{x:Static Dock.Left}"
                                Margin="4"
                                HorizontalAlignment="Center"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                Content="CLOSE THIS" />

                            <Button
                                Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                                Margin="4"
                                HorizontalAlignment="Center"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                Content="CLOSE ALL" />
                        </StackPanel>
                    </materialDesign:DrawerHost.LeftDrawerContent>

                    <ToggleButton Foreground="Black"
                                  Margin="20,20,0,0"
                                  VerticalAlignment="Top"
                                  IsChecked="{Binding ElementName=DrawerHost,Path=IsLeftDrawerOpen}"
                                  HorizontalAlignment="Left"
                                  Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                                  CommandParameter="{x:Static Dock.Left}"
                                  Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                </materialDesign:DrawerHost>
            </materialDesign:ColorZone>
        </showMeTheXaml:XamlDisplay>

        <components:AuthorizationComponent
            Grid.Column="1"
            Grid.Row="0" Grid.RowSpan="2"
            DataContext="{Binding}"
            Visibility="{Binding VisibilityAutorized}" />

        <Frame x:Name="FrameMenuPage"

               Grid.Column="1" Visibility="{Binding VisibilityMenu}"
               NavigationUIVisibility="Hidden" />
    </Grid>

</Window>